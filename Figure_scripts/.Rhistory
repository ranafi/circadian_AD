point.padding = 0.5,
size          = 5
) +
# mean diff and limits of agreement
geom_hline(yintercept = 0,           linetype = "dashed") +
# geom_hline(yintercept = mean_diff + loa,     linetype = "dashed") +
# geom_hline(yintercept = mean_diff - loa,     linetype = "dashed") +
# axis limits and breaks (same circular scale)
xlim(0, 2*pi) +
ylim(min(df$diff, na.rm = TRUE),
max(df$diff, na.rm = TRUE)) +
scale_x_continuous(
breaks = seq(0, 2*pi, by = pi/2),
labels = c("0", expression(pi/2), expression(pi),
expression(3*pi/2), expression(2*pi))
) +
scale_y_continuous(
breaks = seq(-2*pi, 2*pi, by = pi/2),
labels = c(
expression(-2*pi), expression(-3*pi/2),
expression(-pi),  expression(-pi/2),
"0",
expression(pi/2),   expression(pi),
expression(3*pi/2), expression(2*pi)
)
) +
# labels
xlab("Measured CTL cortex gene acrophases") +
ylab("CYCLOPS predicted gene acrophases ") +
# ggtitle(sprintf(
#   "Mean difference = %.2f,  LoA = ±%.2f",
#   mean_diff, loa
# )) +
theme_minimal() +
theme(
axis.text.x    = element_text(size = 14),
axis.text.y    = element_text(size = 14),
axis.title.x   = element_text(size = 16),
axis.title.y   = element_text(size = 16),
plot.title     = element_text(size = 14, face = "bold")
)
library(ggplot2)
library(ggrepel)
# 1. Compute the signed difference
df$diff <- (df$shifted_phase - df$BA11.Peak_mod)
df = df %>% mutate(diff_fixed = ifelse(abs(diff)>pi,diff %% pi, diff) )
# 2. Compute mean and limits of agreement
# mean_diff <- mean(df$diff, na.rm = TRUE)
# sd_diff   <- sd(df$diff,   na.rm = TRUE)
# loa       <- 1.96 * sd_diff
# 3. Make the Bland–Altman–style plot
ggplot(df, aes(x = BA11.Peak_mod, y = diff, label = Gene)) +
geom_point(shape = 16, size = 2, alpha = .7, color = "#0091ff") +
# highlight core_clock genes with labels
geom_text_repel(
data = subset(df, Gene %in% core_clock),
aes(label = Gene),
box.padding   = 0.5,
point.padding = 0.5,
size          = 5
) +
# mean diff and limits of agreement
geom_hline(yintercept = 0,           linetype = "dashed") +
# geom_hline(yintercept = mean_diff + loa,     linetype = "dashed") +
# geom_hline(yintercept = mean_diff - loa,     linetype = "dashed") +
# axis limits and breaks (same circular scale)
xlim(0, 2*pi) +
ylim(min(df$diff, na.rm = TRUE),
max(df$diff, na.rm = TRUE)) +
scale_x_continuous(
breaks = seq(0, 2*pi, by = pi/2),
labels = c("0", expression(pi/2), expression(pi),
expression(3*pi/2), expression(2*pi))
) +
scale_y_continuous(
breaks = seq(-2*pi, 2*pi, by = pi/2),
labels = c(
expression(-2*pi), expression(-3*pi/2),
expression(-pi),  expression(-pi/2),
"0",
expression(pi/2),   expression(pi),
expression(3*pi/2), expression(2*pi)
)
) +
# labels
xlab("Measured CTL cortex gene acrophases") +
ylab("CYCLOPS predicted gene acrophases ") +
# ggtitle(sprintf(
#   "Mean difference = %.2f,  LoA = ±%.2f",
#   mean_diff, loa
# )) +
theme_minimal() +
theme(
axis.text.x    = element_text(size = 14),
axis.text.y    = element_text(size = 14),
axis.title.x   = element_text(size = 16),
axis.title.y   = element_text(size = 16),
plot.title     = element_text(size = 14, face = "bold")
)
library(ggplot2)
library(ggrepel)
# 1. Compute the signed difference
df$diff <- (df$shifted_phase - df$BA11.Peak_mod)
df = df %>% mutate(diff_fixed = ifelse(abs(diff)>pi,diff %% pi, diff) )
# 2. Compute mean and limits of agreement
# mean_diff <- mean(df$diff, na.rm = TRUE)
# sd_diff   <- sd(df$diff,   na.rm = TRUE)
# loa       <- 1.96 * sd_diff
# 3. Make the Bland–Altman–style plot
ggplot(df, aes(x = BA11.Peak_mod, y = diff_fixed, label = Gene)) +
geom_point(shape = 16, size = 2, alpha = .7, color = "#0091ff") +
# highlight core_clock genes with labels
geom_text_repel(
data = subset(df, Gene %in% core_clock),
aes(label = Gene),
box.padding   = 0.5,
point.padding = 0.5,
size          = 5
) +
# mean diff and limits of agreement
geom_hline(yintercept = 0,           linetype = "dashed") +
# geom_hline(yintercept = mean_diff + loa,     linetype = "dashed") +
# geom_hline(yintercept = mean_diff - loa,     linetype = "dashed") +
# axis limits and breaks (same circular scale)
xlim(0, 2*pi) +
ylim(-pi,
pi) +
scale_x_continuous(
breaks = seq(0, 2*pi, by = pi/2),
labels = c("0", expression(pi/2), expression(pi),
expression(3*pi/2), expression(2*pi))
) +
# labels
xlab("Measured CTL cortex gene acrophases") +
ylab("CYCLOPS predicted gene acrophases ") +
# ggtitle(sprintf(
#   "Mean difference = %.2f,  LoA = ±%.2f",
#   mean_diff, loa
# )) +
theme_minimal() +
theme(
axis.text.x    = element_text(size = 14),
axis.text.y    = element_text(size = 14),
axis.title.x   = element_text(size = 16),
axis.title.y   = element_text(size = 16),
plot.title     = element_text(size = 14, face = "bold")
)
-5+2*pi
-5 %% pi
-90 %% pi
-90 + 2pi
-90 + 2*pi
-90 %% (2*pi) + (2*pi)
-90 %% (pi) + (2*pi)
hist(df$diff)
-6 %% pi
-3.1416 %% pi
4 %% pi
# 1. Compute the signed difference
df$diff <- (df$shifted_phase - df$BA11.Peak_mod)
df = df %>% mutate(diff_fixed = ifelse(abs(diff)>pi,diff - sign(diff)*2*pi, diff) )
plot(df$diff, df$diff_fixed)
df$diff <- (df$shifted_phase - df$BA11.Peak_mod)
df = df %>% mutate(diff_fixed = ifelse(abs(diff)>pi,diff %%pi, diff) )
plot(df$diff, df$diff_fixed)
library(ggplot2)
library(ggrepel)
# 1. Compute the signed difference
df$diff <- (df$shifted_phase - df$BA11.Peak_mod)
df = df %>% mutate(diff_fixed = ifelse(abs(diff)>pi,diff - sign(diff)*2*pi, diff) )
# 2. Compute mean and limits of agreement
# mean_diff <- mean(df$diff, na.rm = TRUE)
# sd_diff   <- sd(df$diff,   na.rm = TRUE)
# loa       <- 1.96 * sd_diff
# 3. Make the Bland–Altman–style plot
ggplot(df, aes(x = BA11.Peak_mod, y = diff_fixed, label = Gene)) +
geom_point(shape = 16, size = 2, alpha = .7, color = "#0091ff") +
# highlight core_clock genes with labels
geom_text_repel(
data = subset(df, Gene %in% core_clock),
aes(label = Gene),
box.padding   = 0.5,
point.padding = 0.5,
size          = 5
) +
# mean diff and limits of agreement
geom_hline(yintercept = 0,           linetype = "dashed") +
# geom_hline(yintercept = mean_diff + loa,     linetype = "dashed") +
# geom_hline(yintercept = mean_diff - loa,     linetype = "dashed") +
# axis limits and breaks (same circular scale)
xlim(0, 2*pi) +
ylim(-pi,
pi) +
scale_x_continuous(
breaks = seq(0, 2*pi, by = pi/2),
labels = c("0", expression(pi/2), expression(pi),
expression(3*pi/2), expression(2*pi))
) +
# labels
xlab("Measured CTL cortex gene acrophases") +
ylab("CYCLOPS predicted gene acrophases ") +
# ggtitle(sprintf(
#   "Mean difference = %.2f,  LoA = ±%.2f",
#   mean_diff, loa
# )) +
theme_minimal() +
theme(
axis.text.x    = element_text(size = 14),
axis.text.y    = element_text(size = 14),
axis.title.x   = element_text(size = 16),
axis.title.y   = element_text(size = 16),
plot.title     = element_text(size = 14, face = "bold")
)
library(ggplot2)
library(ggrepel)
# 1. Compute the signed difference
df$diff <- (df$shifted_phase - df$BA11.Peak_mod)
df = df %>% mutate(diff_fixed = ifelse(abs(diff)>pi,diff - sign(diff)*2*pi, diff) )
# 2. Compute mean and limits of agreement
# mean_diff <- mean(df$diff, na.rm = TRUE)
# sd_diff   <- sd(df$diff,   na.rm = TRUE)
# loa       <- 1.96 * sd_diff
# 3. Make the Bland–Altman–style plot
ggplot(df, aes(x = BA11.Peak_mod, y = diff_fixed, label = Gene)) +
geom_point(shape = 16, size = 2, alpha = .7, color = "#0091ff") +
# highlight core_clock genes with labels
geom_text_repel(
data = subset(df, Gene %in% core_clock),
aes(label = Gene),
box.padding   = 0.5,
point.padding = 0.5,
size          = 5
) +
# mean diff and limits of agreement
geom_hline(yintercept = 0,           linetype = "dashed") +
# geom_hline(yintercept = mean_diff + loa,     linetype = "dashed") +
# geom_hline(yintercept = mean_diff - loa,     linetype = "dashed") +
# axis limits and breaks (same circular scale)
xlim(0, 2*pi) +
ylim(-pi,
pi) +
scale_x_continuous(
breaks = seq(0, 2*pi, by = pi/2),
labels = c("0", expression(pi/2), expression(pi),
expression(3*pi/2), expression(2*pi))
) +
# labels
xlab("Measured CTL cortex gene acrophases") +
ylab("CYCLOPS predicted gene acrophases ") +
# ggtitle(sprintf(
#   "Mean difference = %.2f,  LoA = ±%.2f",
#   mean_diff, loa
# )) +
theme_minimal() +
theme(
axis.text.x    = element_text(size = 14),
axis.text.y    = element_text(size = 14),
axis.title.x   = element_text(size = 16),
axis.title.y   = element_text(size = 16),
plot.title     = element_text(size = 14, face = "bold")
)
hist(df$diff)
View(df)
# 3. Make the Bland–Altman–style plot
ggplot(df, aes(x = BA11.Peak_mod, y = diff_fixed, label = Gene)) +
geom_point(shape = 16, size = 2, alpha = .7, color = "#0091ff") +
# highlight core_clock genes with labels
geom_text_repel(
data = subset(df, Gene %in% core_clock),
aes(label = Gene),
box.padding   = 0.5,
point.padding = 0.5,
size          = 5
) +
scale_y_continuous(
breaks = seq(-pi,pi, by = pi/4),
labels = c(
expression(-pi), expression(-3*pi/4),
expression(-pi/2),  expression(-pi/4),
"0",
expression(pi/4),   expression(pi/2),
expression(3*pi/4), expression(pi)
)
) +
# mean diff and limits of agreement
geom_hline(yintercept = 0,           linetype = "dashed") +
# geom_hline(yintercept = mean_diff + loa,     linetype = "dashed") +
# geom_hline(yintercept = mean_diff - loa,     linetype = "dashed") +
# axis limits and breaks (same circular scale)
xlim(0, 2*pi) +
ylim(-pi,
pi) +
scale_x_continuous(
breaks = seq(0, 2*pi, by = pi/2),
labels = c("0", expression(pi/2), expression(pi),
expression(3*pi/2), expression(2*pi))
) +
# labels
xlab("Measured CTL cortex gene acrophases") +
ylab("CYCLOPS predicted gene acrophases ") +
# ggtitle(sprintf(
#   "Mean difference = %.2f,  LoA = ±%.2f",
#   mean_diff, loa
# )) +
theme_minimal() +
theme(
axis.text.x    = element_text(size = 14),
axis.text.y    = element_text(size = 14),
axis.title.x   = element_text(size = 16),
axis.title.y   = element_text(size = 16),
plot.title     = element_text(size = 14, face = "bold")
)
library(ggplot2)
library(ggrepel)
# 1. Compute the signed difference
df$diff <- (df$shifted_phase - df$BA11.Peak_mod)
df = df %>% mutate(diff_fixed = ifelse(abs(diff)>pi,diff - sign(diff)*2*pi, diff) )
# 2. Compute mean and limits of agreement
# mean_diff <- mean(df$diff, na.rm = TRUE)
# sd_diff   <- sd(df$diff,   na.rm = TRUE)
# loa       <- 1.96 * sd_diff
# 3. Make the Bland–Altman–style plot
ggplot(df, aes(x = BA11.Peak_mod, y = diff_fixed, label = Gene)) +
geom_point(shape = 16, size = 2, alpha = .7, color = "#0091ff") +
# highlight core_clock genes with labels
geom_text_repel(
data = subset(df, Gene %in% core_clock),
aes(label = Gene),
box.padding   = 0.5,
point.padding = 0.5,
size          = 5
) +
scale_y_continuous(
breaks = seq(-pi,pi, by = pi/4),
labels = c(
expression(-pi), expression(-3*pi/4),
expression(-pi/2),  expression(-pi/4),
"0",
expression(pi/4),   expression(pi/2),
expression(3*pi/4), expression(pi)
)
) +
# mean diff and limits of agreement
geom_hline(yintercept = 0,           linetype = "dashed") +
# geom_hline(yintercept = mean_diff + loa,     linetype = "dashed") +
# geom_hline(yintercept = mean_diff - loa,     linetype = "dashed") +
# axis limits and breaks (same circular scale)
xlim(0, 2*pi) +
ylim(-pi,
pi) +
scale_x_continuous(
breaks = seq(0, 2*pi, by = pi/2),
labels = c("0", expression(pi/2), expression(pi),
expression(3*pi/2), expression(2*pi))
) +
# labels
xlab("Measured CTL cortex gene acrophases") +
ylab("CYCLOPS predicted gene acrophases ") +
# ggtitle(sprintf(
#   "Mean difference = %.2f,  LoA = ±%.2f",
#   mean_diff, loa
# )) +
theme_minimal() +
theme(
axis.text.x    = element_text(size = 14),
axis.text.y    = element_text(size = 14),
axis.title.x   = element_text(size = 16),
axis.title.y   = element_text(size = 16),
plot.title     = element_text(size = 14, face = "bold")
)
seq(-pi,pi, by = pi/4)
library(ggplot2)
library(ggrepel)
# 1. Compute the signed difference
df$diff <- (df$shifted_phase - df$BA11.Peak_mod)
df = df %>% mutate(diff_fixed = ifelse(abs(diff)>pi,diff - sign(diff)*2*pi, diff) )
# 2. Compute mean and limits of agreement
# mean_diff <- mean(df$diff, na.rm = TRUE)
# sd_diff   <- sd(df$diff,   na.rm = TRUE)
# loa       <- 1.96 * sd_diff
# 3. Make the Bland–Altman–style plot
ggplot(df, aes(x = BA11.Peak_mod, y = diff_fixed, label = Gene)) +
geom_point(shape = 16, size = 2, alpha = .7, color = "#0091ff") +
# highlight core_clock genes with labels
geom_text_repel(
data = subset(df, Gene %in% core_clock),
aes(label = Gene),
box.padding   = 0.5,
point.padding = 0.5,
size          = 5
) +
ylim(-pi,pi)+
scale_y_continuous(
breaks = seq(-pi,pi, by = pi/4),
labels = c(
expression(-pi), expression(-3*pi/4),
expression(-pi/2),  expression(-pi/4),
"0",
expression(pi/4),   expression(pi/2),
expression(3*pi/4), expression(pi)
)
) +
# mean diff and limits of agreement
geom_hline(yintercept = 0,           linetype = "dashed") +
# geom_hline(yintercept = mean_diff + loa,     linetype = "dashed") +
# geom_hline(yintercept = mean_diff - loa,     linetype = "dashed") +
# axis limits and breaks (same circular scale)
xlim(0, 2*pi) +
scale_x_continuous(
breaks = seq(0, 2*pi, by = pi/2),
labels = c("0", expression(pi/2), expression(pi),
expression(3*pi/2), expression(2*pi))
) +
# labels
xlab("Measured CTL cortex gene acrophases") +
ylab("CYCLOPS predicted gene acrophases ") +
# ggtitle(sprintf(
#   "Mean difference = %.2f,  LoA = ±%.2f",
#   mean_diff, loa
# )) +
theme_minimal() +
theme(
axis.text.x    = element_text(size = 14),
axis.text.y    = element_text(size = 14),
axis.title.x   = element_text(size = 16),
axis.title.y   = element_text(size = 16),
plot.title     = element_text(size = 14, face = "bold")
)
View(cosine_distance)
library(reticulate) #use to find conda env for python
library(tidyverse)
source("./downstream_helpers/differential_rhyth_generalized.R")
source("./downstream_helpers/create_rnk_files.R")
source("./downstream_helpers/fgsea.R")
source("./downstream_helpers/Files_for_Pscan.R")
source("./downstream_helpers/Make_KEGG_map_files.R")
source("./downstream_helpers/Check_TF_for_cycling_or_DR.R")
source("./downstream_helpers/plot_clock_face_plots.R")
source("./downstream_helpers/plot_gene_traces_generalized.R")
source("./downstream_helpers/order_metabolon.R")
source("./downstream_helpers/order_proteomics.R")
conda_list()
conda_list()[[2]][2] %>%
use_condaenv(required = TRUE)
print(paste("Using cond env:",conda_list()[[1]][2] ))
#path to cyclops ordering
path_to_cyclops_ordering = "../Cyclops_ordering/"
#path to normalized counts
path_to_tmm_file = "../normed_counts/ExcSubtypes35_FiltByExprDefault_TMM.csv"
# optional path to file containing differential expression results
edgeR_de_filename = "../edgeR_diff_expression/Exc_All/Exc_all_filtByExpr_edgeR_DE_QLFTest.csv"
path_to_rosmap_clin = "../ROSMAP_metadata/cleaned_rosmapmeta_n409.csv"
metabolon_filename = "../metabolic_data/ROSMAP_Metabolon_HD4_Brain514_assay_data.csv"
metabolon_datakey = "../metabolic_data/ROSMAP_Metabolon_HD4_Data_Dictionary.csv"
#BHQ corrected p cutoff to be considered cycling in analysis:
isCyclingBHQCutoff = 0.1
percentile = 0.
useBatch = T
setwd(path_to_cyclops_ordering)
if (!(dir.exists("downstream_output/plots"))){
dir.create("downstream_output/plots")
}
#for cycling_in_CTL.csv
plot_clock_face(paste0(path_to_cyclops_ordering, "/downstream_output/plots/CTL_clock_face_plot_AR1"), "downstream_output/cosinor_results_CTL.csv", mouse_data = mouse_data, BHQ_cutoff = isCyclingBHQCutoff, amp_ratio_cutoff = 0.1)
plot_clock_face(paste0(path_to_cyclops_ordering, "/downstream_output/plots/CTL_clock_face_plot"), "downstream_output/cosinor_results_CTL.csv", mouse_data = mouse_data, BHQ_cutoff = isCyclingBHQCutoff, amp_ratio_cutoff = 0.0)
setwd(path_to_cyclops_ordering)
#for cycling_in_AD.csv
plot_clock_face(paste0(path_to_cyclops_ordering, "/downstream_output/plots/AD_clock_face_plot_AR1"),"downstream_output/cosinor_results_AD.csv",mouse_data = mouse_data, BHQ_cutoff = isCyclingBHQCutoff, amp_ratio_cutoff = 0.1)
plot_clock_face(paste0(path_to_cyclops_ordering, "/downstream_output/plots/AD_clock_face_plot"),"downstream_output/cosinor_results_AD.csv",mouse_data = mouse_data, BHQ_cutoff = isCyclingBHQCutoff, amp_ratio_cutoff = 0.0)
#plot cyclops histogram
plot_subject_histogram(path_to_cyclops_ordering, "cond_0")
plot_subject_histogram(path_to_cyclops_ordering, "cond_1")
#Gene Tracings
genelist = c("ARNTL", "NPAS2", "CLOCK", "CRY1", "CRY2", "NR1D1", "NR1D2", "PER1", "PER2", "PER3", "DBP", "TEF")
plot_genes(path_to_tmm_file, path_to_cyclops_ordering, genelist, useBatch = useBatch, percentile = percentile, split_cond_plots = T, save_pdf = T)
plot_genes(path_to_tmm_file, path_to_cyclops_ordering, genelist, useBatch = useBatch, percentile = percentile, split_cond_plots = F, save_pdf = T)
setwd(path_to_cyclops_ordering)
if (!(dir.exists("downstream_output/plots"))){
dir.create("downstream_output/plots")
}
#for cycling_in_CTL.csv
plot_clock_face(paste0(path_to_cyclops_ordering, "/downstream_output/plots/CTL_clock_face_plot_AR1"), "downstream_output/cosinor_results_CTL.csv", mouse_data = mouse_data, BHQ_cutoff = isCyclingBHQCutoff, amp_ratio_cutoff = 0.1)
plot_clock_face(paste0(path_to_cyclops_ordering, "/downstream_output/plots/CTL_clock_face_plot"), "downstream_output/cosinor_results_CTL.csv", mouse_data = mouse_data, BHQ_cutoff = isCyclingBHQCutoff, amp_ratio_cutoff = 0.0)
setwd(path_to_cyclops_ordering)
#for cycling_in_AD.csv
plot_clock_face(paste0(path_to_cyclops_ordering, "/downstream_output/plots/AD_clock_face_plot_AR1"),"downstream_output/cosinor_results_AD.csv",mouse_data = mouse_data, BHQ_cutoff = isCyclingBHQCutoff, amp_ratio_cutoff = 0.1)
plot_clock_face(paste0(path_to_cyclops_ordering, "/downstream_output/plots/AD_clock_face_plot"),"downstream_output/cosinor_results_AD.csv",mouse_data = mouse_data, BHQ_cutoff = isCyclingBHQCutoff, amp_ratio_cutoff = 0.0)
#plot cyclops histogram
plot_subject_histogram(path_to_cyclops_ordering, "cond_0")
plot_subject_histogram(path_to_cyclops_ordering, "cond_1")
#Gene Tracings
genelist = c("ARNTL", "NPAS2", "CLOCK", "CRY1", "CRY2", "NR1D1", "NR1D2", "PER1", "PER2", "PER3", "DBP", "TEF")
plot_genes(path_to_tmm_file, path_to_cyclops_ordering, genelist, useBatch = useBatch, percentile = percentile, split_cond_plots = T, save_pdf = T)
plot_genes(path_to_tmm_file, path_to_cyclops_ordering, genelist, useBatch = useBatch, percentile = percentile, split_cond_plots = F, save_pdf = T)
setwd(path_to_cyclops_ordering)
if (!(dir.exists("downstream_output/plots"))){
dir.create("downstream_output/plots")
}
#for cycling_in_CTL.csv
plot_clock_face(paste0(path_to_cyclops_ordering, "/downstream_output/plots/CTL_clock_face_plot_AR1"), "downstream_output/cosinor_results_CTL.csv", mouse_data = mouse_data, BHQ_cutoff = isCyclingBHQCutoff, amp_ratio_cutoff = 0.1)
plot_clock_face(paste0(path_to_cyclops_ordering, "/downstream_output/plots/CTL_clock_face_plot"), "downstream_output/cosinor_results_CTL.csv", mouse_data = mouse_data, BHQ_cutoff = isCyclingBHQCutoff, amp_ratio_cutoff = 0.0)
setwd(path_to_cyclops_ordering)
#for cycling_in_AD.csv
plot_clock_face(paste0(path_to_cyclops_ordering, "/downstream_output/plots/AD_clock_face_plot_AR1"),"downstream_output/cosinor_results_AD.csv",mouse_data = mouse_data, BHQ_cutoff = isCyclingBHQCutoff, amp_ratio_cutoff = 0.1)
plot_clock_face(paste0(path_to_cyclops_ordering, "/downstream_output/plots/AD_clock_face_plot"),"downstream_output/cosinor_results_AD.csv",mouse_data = mouse_data, BHQ_cutoff = isCyclingBHQCutoff, amp_ratio_cutoff = 0.0)
#plot cyclops histogram
plot_subject_histogram(path_to_cyclops_ordering, "cond_0")
plot_subject_histogram(path_to_cyclops_ordering, "cond_1")
#Gene Tracings
genelist = c("ARNTL", "NPAS2", "CLOCK", "CRY1", "CRY2", "NR1D1", "NR1D2", "PER1", "PER2", "PER3", "DBP", "TEF")
plot_genes(path_to_tmm_file, path_to_cyclops_ordering, genelist, useBatch = useBatch, percentile = percentile, split_cond_plots = T, save_pdf = T)
plot_genes(path_to_tmm_file, path_to_cyclops_ordering, genelist, useBatch = useBatch, percentile = percentile, split_cond_plots = F, save_pdf = T)
